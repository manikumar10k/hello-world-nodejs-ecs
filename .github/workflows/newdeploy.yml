name: CICD

on:
  push:
    branches: main

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        run: aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} && aws configure set default.region ${{ env.AWS_REGION }}
        
      - name: Login to Amazon ECR
        run: aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO_URL }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          IMAGE_TAG=latest
          echo "IMAGE_TAG: $IMAGE_TAG"
          docker build -t ${{ env.ECR_REPO_URL }}:$IMAGE_TAG -f /hello-world-nodejs-ecs/Dockerfile
          docker push ${{ env.ECR_REPO_URL }}:$IMAGE_TAG
          echo "IMAGE_URL=${{ env.ECR_REPO_URL }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Download task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition nodejs-app-task \
            --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: hello-world
          image: ${{ env.IMAGE_URL }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: hello-world-service
          cluster: hellow-world-cluster
          wait-for-service-stability: true
